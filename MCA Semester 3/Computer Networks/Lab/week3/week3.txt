//Ashwin
//220970025
//14/08/2023
// week 3


1_palindrome_client.c
......................
#include<stdio.h>
#include<fcntl.h>
#include<stdlib.h>
#include<string.h>
#include<unistd.h>
int main()
{
	int n,fd,fd1,write_n;
	char str[50],result[50];
	printf("Enter the string:");
	scanf("%s",str);
	if((fd=open("testpipe",O_WRONLY))<0)
	{
		printf("\nPipe opening failed\n");
		exit(1);
	}
	printf("FD: %d\n",fd);
	write_n=write(fd,str,sizeof(str)); 
	if(write_n<0)
		printf("writing to pipe failed");
	close(fd);
	if((fd1=open("testpipe",O_RDONLY))<0)
	{
		printf("\nPipe read failed");
	}
	if(n=read(fd1,result,sizeof(result))<0)
		printf("\nPipe read failed");
	printf("Entered string is palindrome :%s\n",res);
	close(fd1);
	return 0;
}


1_palindrome_server.c
................
#include<stdio.h>
#include<unistd.h>
#include<string.h>
#include<fcntl.h>
int main()
{
	int fd,fd1,n,flag=1;
	char result[50],str1[50];
	fd=open("testpipe",O_RDONLY);
	if(fd<0)
		printf("\nPipe open failed");
	n=read(fd,str1,sizeof(str1));
	if(n>0)
	printf("\nString received: %s\n\n",str1);
	int len=strlen(str1);
	for(int i=0;i<len;i++)
	{
		if(str1[i]!=str1[len-i-1])
		{
			flag=0;
		}
		else
		{
			flag=1;
		}
	}
	if(flag==1)
		strcpy(res,"YES");
	else
		strcpy(res,"NO");
	close(fd);
	fd1=open("testpipe",O_WRONLY);
	if(fd1<0)
		printf("\nFailed");
	n=write(fd1,res,sizeof(res));	
	if(n<0)
		printf("\nWrite failed");
	close(fd1);
	return 0;
}


2_LoginAutentication_client.c
.................
#include <stdio.h>
#include <string.h>
#include <fcntl.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <unistd.h>
 
 
int main()
{
	char* fifo_pipe = "login_pipe";
	mkfifo(fifo_pipe, 0777);
	char arr1[2][20],arr2[20];
	int flag=0;
	printf("Opening login_pipe\n");
	int fd = open(fifo_pipe, O_WRONLY);
	printf("Enter Username \n");
	scanf("%s",&arr1[0][0]);
	printf("Enter Password \n");
	scanf("%s",&arr1[1][0]);
	printf("Writing username and password\n");
	write(fd, arr1, sizeof(arr1));
	close(fd);
	printf("Opening login_pipe in read mode\n");
	fd = open(fifo_pipe, O_RDONLY);
	printf("Reading login_pipe \n");
	read(fd, arr2, sizeof(arr2));
	printf("%s\n", arr2);
	close(fd);
	return 0;
}

                      
2_LoginAutentication_server.c
 ..................
#include <stdio.h>
#include <string.h>
#include <fcntl.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <unistd.h>
int main()
{
	char* fifo_pipe = "login_pipe";
	mkfifo(fifo_pipe, 0777);
	char arr1[2][20],arr2[20]="Login Access Denied",users[3][2][20]={{"admin","1234"},{"admin","admin123"},{"admin","password"}};
	while(1)
	{
		int flag=0;
		int fd = open(fifo_pipe, O_RDONLY);
		read(fd, arr1, sizeof(arr1));
		close(fd);
		for(int i=0;i<3;i++)
		{
			if(strcmp(arr1[0],users[i][0])==0)
				if(strcmp(arr1[1],users[i][1])==0)
				{
					strcpy(arr2,"Welcome ");
					strcat(arr2, arr1[0]);
					break;
				}
		}
	fd = open(fifo_pipe, O_WRONLY);
	write(fd,arr2,sizeof(arr2));
	close(fd);
	}
	return 0;
}


3_AmountTenture_client.c
.............
#include<stdio.h>
#include<stdlib.h>
#include<fcntl.h>
#include<errno.h>
#include<string.h>
#include<strings.h>
#include<sys/types.h>
#include<sys/stat.h>
#include<unistd.h>
int main()
{
	float dep_amt,mat_amt;
	int year;
	printf("Enter the Deposite Amount:");
	scanf("%f",&deposite);
	printf("Enter the year:");
	scanf("%d",&year);
	mkfifo("tenture_pipe",0777);
	int fd=open("tenture_pipe",O_WRONLY);
	write(fd,&deposite,sizeof(deposite));
	write(fd,&year,sizeof(year));
	close(fd);
	printf("CLIENT :\n\tREADING THE MESSAGE FROM THE SERVER\n");
	fd = open("tenture_pipe",O_RDONLY);
	read(fd,&mat_amt,sizeof(mat_amt));
	printf("%f \n",amt);
	close(fd);
	return 0;
}

3_AmountTenture_server.c
..............
#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<sys/types.h>
#include<fcntl.h>
#include<sys/stat.h>
#include<string.h>
int main()
{
	float dep_amt,mat_amt;
	int years;
	int fd=open("tenture_pipe",O_RDONLY);
	read(fd,&dep_amt,sizeof(dep_amt));
	int read_r=read(fd,&years,sizeof(years));
	if(read_r>0)
	{
		printf("SERVER: MESSAGE RECEIVED!\n");
	} 
	printf("Writing message to client..\n");
	fd=open("tenture_pipe",O_WRONLY);
	if(years>0 && years<=1)
	{
		mat_amt=dep_amt*0.05;
		write(fd,&mat_amt,sizeof(mat_amt));
	}
	else if(years>1 && years<=2)
	{
		mat_amt=dep_amt*0.06;
		write(fd,&mat_amt,sizeof(mat_amt));
	}
	else if(years>2 && years<=3)
	{
		mat_amt=dep_amt*0.07;
		write(fd,&mat_amt,sizeof(mat_amt));
	}
	else
	{
		mat_amt=dep_amt*0.08;
		write(fd,&mat_amt,sizeof(mat_amt));
	}
	return 0;
}



4_ElectricityBill_client.c
.............
#include <stdio.h>
#include <string.h>
#include <fcntl.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <unistd.h>
int main()
{
	mkfifo("e_bill", 0777);
	long int id;
	int units;
	double bill_amt;
	int fd = open("e_bill", O_WRONLY);
	printf("Enter Customer Number \n");
	scanf("%ld",&id);
	printf("Enter units consumed\n");
	scanf("%d",&units);
	write(fd, &units, sizeof(units));
	close(fd);
	fd = open("e_bill", O_RDONLY);
	read(fd, &bill_amt, sizeof(bill_amt));
	printf("Bill amount is %lf\n",bill);
	close(fd);
	return 0;
}

4_ElectricityBill_server.c
...............
#include <stdio.h>
#include <string.h>
#include <fcntl.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <unistd.h>
int main()
{
	mkfifo("e_bill", 0777);
	int units;
	double bill_amt;
	while(1)
	{
		int fd = open("e_bill", O_RDONLY);
		read(fd, &units, sizeof(units));
		close(fd);
		printf("Number of units: %d",units);
		if(units<=50)
			bill_amt=units*1;
		else if(units<=100)
			bill_amt=50+(units-50)*1.5;
		else if(units<=200)
			bill_amt=50+75+(units-100)*2;
		else
			bill_amt=50+75+200+(units-200)*3;
		fd = open(myfifo, O_WRONLY);
		write(fd,&bill,sizeof(bill));
		close(fd);
	}
	return 0;
}


5_seatBooking_client.c
................
#include<stdio.h>
#include<stdlib.h>
#include<fcntl.h>
#include<errno.h>
#include<string.h>
#include<strings.h>
#include<sys/types.h>
#include<sys/stat.h>
#include<unistd.h>
 
int main()
{
	char name[20],source[20],dest[20];
	int seats;
	float amt;
	printf("Enter the passenger name : ");
	scanf("%s",name);
	printf("Enter the source : ");
	scanf("%s",source);
	printf("Enter the destination : ");
	scanf("%s",dest);
	printf("Enter the number of seats : ");
	scanf("%d",&seats);
	mkfifo("seatBook_pipe",0777);
	int fd=open("seatBook_pipe",O_WRONLY);
	write(fd,source,sizeof(source));
	write(fd,dest,sizeof(dest));
	write(fd,&seats,sizeof(seats));
	close(fd);
	printf("CLIENT :READING THE MESSAGE FROM THE SERVER\n");
	fd = open("seatBook_pipe",O_RDONLY);
	read(fd,&amt,sizeof(amt));
	if(amt==0.0)
		printf("Seats not available..\n");
	else
	{
		printf("\nCustomer name : %s",name);
		printf("\nSource : %s Destination : %s",source,dest);
		printf("\nNo. of seats : %d",seats);
		printf("\nBill Amount : %f\n",amt);
	}
	close(fd);
	return 0;
}

5_seatBooking_server.c
...............
#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<sys/types.h>
#include<fcntl.h>
#include<sys/stat.h>
#include<string.h>
int main()
{
	int b[12][4]={{1,2,4000,30},{1,3,3000,30},{1,4,5000,30},{2,1,3500,30},{2,3,3000,30},{2,4,5000,30},{3,1,3500,30},{3,2,4000,30},{3,4,3000,30},{4,1,5000,30},{4,2,3500,30},{4,3,5000,30}};
	char source[20],dest[20];
	int seat;
	float amt;
	int fd=open("seatBook_pipe",O_RDONLY);
	int r=read(fd,&source,sizeof(source));
	read(fd,&dest,sizeof(dest));
	read(fd,&seat,sizeof(seat));
	if(r>0)
	{
		printf("SERVER: MESSAGE RECEIVED!\n");
	}
	int s;
	if(strcmp(source,"mangalore")==0)
		s=1;
	else if(strcmp(source,"bangalore")==0)
		s=2;
	else if(strcmp(source,"mumbai")==0)
		s=3;
	else if(strcmp(source,"delhi")==0)
		s=4;
	else
		s=0;
	int d;
	if(strcmp(dest,"mangalore")==0)
		d=1;
	else if(strcmp(dest,"bangalore")==0)
		d=2;
	else if(strcmp(dest,"mumbai")==0)
		d=3;
	else if(strcmp(dest,"delhi")==0)
		d=4;
	else
		d=0;
	printf("Writing to client..\n");
	fd=open("seatBook_pipe",O_WRONLY);
	int flag=0;
	for(int i=0;i<4;i++)
	{
		if(s==b[i][0] && d==b[i][1])
		{
			if(seat<b[i][3])
			{
				b[i][3]-=seat;
				amt=(seat*b[i][2]);
				flag=1;
				break;
			}
		}
	}
	if(flag==1)
		write(fd,&amt,sizeof(amt));
	else
	{
		amt=0.0;
		write(fd,&amt,sizeof(amt));
	}
	return 0;
}



